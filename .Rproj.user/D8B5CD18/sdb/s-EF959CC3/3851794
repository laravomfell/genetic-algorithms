{
    "collab_server" : "",
    "contents" : "fit.fun <- function(weights, data, pred){\n  # Brier Score\n  return(sum((apply(data, 1, function(x) sum(x * weights)) - pred) ^ 2) / nrow(data))\n}\n\n# Population Function (generates weights that sum up to 1)\ngen.pop <- function(popsize, dims, low, up) {\n  m <- matrix(runif(popsize*dims, low, up), ncol=dims)\n  m <- ifelse(m < 0.01, 0, m)\n  m <- sweep(m, 1, rowSums(m), FUN=\"/\")\n  m\n}\n\n# Population Function for PBIL (probability based)\ngen.pop.pbil <- function(size, variables, intv, prob){\n  # take prob within which interval the value shall be and sample from there\n  \n  population <- foreach(j = 1:size, .combine = rbind) %:% foreach(l = 1:variables, .combine=c) %do% \n    ifelse(runif(1) < prob[l], runif(1, intv[l], 1), runif(1, 0, intv[l]))\n  \n  # sparsity + normalize\n  population <- ifelse(population < 0.01, 0, population)\n  population <- sweep(population, 1, rowSums(population), FUN=\"/\")\n  \n  # drop rownames introduced in foreach\n  rownames(population) <- NULL\n  return(population)\n}",
    "created" : 1540214123802.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "4035439306",
    "id" : "3851794",
    "lastKnownWriteTime" : 1467018052,
    "last_content_update" : 1467018052,
    "path" : "C:/Users/Lara/One Drive - Warwick/OneDrive - University of Warwick/GeneticAgorithm/code/ga_helper.R",
    "project_path" : "code/ga_helper.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}